name: Docker Image CI

on:
  push:
    branches: ["main"]

env:
  REGISTRY: docker.io

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/news-api:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/news-api:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Deploy to Server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_IP }}
          port: 2538
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            set -e  # 遇到错误立即退出
            PREV_IMAGE=$(docker inspect --format='{{.Image}}' news-api || true)
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/news-api:latest
            docker stop news-api || true
            docker rm news-api || true
            if ! docker run -d --name news-api -p 8099:8099 -e PORT=8099 -e DB_DSN=${{ secrets.DB_DSN }} ${{ secrets.DOCKERHUB_USERNAME }}/news-api:latest; then
              echo "部署失败，尝试回滚..."
              if [ -n "$PREV_IMAGE" ]; then
                docker run -d --name news-api -p 8099:8099 -e PORT=8099 -e DB_DSN=${{ secrets.DB_DSN }} $PREV_IMAGE
              else
                echo "没有可用的回滚镜像"
                exit 1
              fi
            fi
            docker image prune -f